void parenthesis(int n,vector<string>&ans,int open,int close,string s)
    {
        if(open==n && close==n)
        {
            ans.push_back(s);
            return ;

        }
        if(open<n)
        {
            s=s+'(';
            parenthesis(n,ans,open+1,close,s);
            s.pop_back();
        }
        if(open>close)
        {
            s=s+')';
            parenthesis(n,ans,open,close+1,s);
            s.pop_back();
        }
    }
    vector<string> generateParenthesis(int n) 
    {
        vector<string>ans;
        int open=0;
        int close=0;
        string s;
        parenthesis(n,ans,open,close,s);
        return ans;
    }
